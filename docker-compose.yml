services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ai-chat-api
    ports:
      - "8000:8000"
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENAI_BASE_URL=${OPENAI_BASE_URL}
      - DEEPSEEK_API_KEY=${DEEPSEEK_API_KEY}
      - DEEPSEEK_BASE_URL=${DEEPSEEK_BASE_URL}
      # 提供嵌入服务
      - DASHSCOPE_API_KEY=${DASHSCOPE_API_KEY} 
      - DASHSCOPE_BASE_URL=${DASHSCOPE_BASE_URL}
    volumes:
      - ./app:/app/app
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # ===============================================
  # ChromaDB 服务配置
  # ===============================================
  chroma:
    image: chromadb/chroma:latest
    container_name: chroma-server
    # 将容器的 8000 端口映射到宿主机的 8001，避免与 api 服务的 8000 冲突
    ports:
      - "8002:8000" 
    environment:
      # 设置为 HTTP 模式
      - IS_PERSISTENT=TRUE
      - ALLOW_RESET=TRUE
      - ANONYMIZED_TELEMETRY=False
      - CHROMA_HOST=0.0.0.0
      - CHROMA_PORT=8000
    volumes:
      # 挂载卷以持久化数据
      - chroma-data:/chroma/chroma
    restart: unless-stopped

# ===============================================
# 卷定义
# ===============================================
volumes:
  chroma-data:
    driver: local